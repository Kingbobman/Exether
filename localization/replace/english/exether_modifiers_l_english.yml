l_english:
  ig_variant_mages: "[GetInterestGroupVariant('ig_mages',GetPlayer).GetNameWithCountryVariant]"
  interest_group_ig_mages_pol_str_mult: "$ig_variant_mages$ [concept_political_strength]"
  interest_group_ig_mages_pol_str_mult_desc: "A bonus or penalty to the total [concept_political_strength] of the $ig_variant_mages$ [concept_interest_group]"

  country_adventurers_pol_str_mult: "[concept_political_strength] of $adventurers$"
  country_adventurers_pol_str_mult_desc: "An increase or descrease in the [concept_political_strength] of $adventurers$"

  country_heroes_pol_str_mult: "[concept_political_strength] of $heroes$"
  country_heroes_pol_str_mult_desc: "An increase or descrease in the [concept_political_strength] of $heroes$"

  country_renown_pos_add: "@renown! [concept_renown]"
  country_renown_pos_add_desc:  "An increase or decrease in @renown! [concept_renown]"

  country_renown_neg_add: "@renown! [concept_renown]"
  country_renown_neg_add_desc:  "An increase or decrease in @renown! [concept_renown]"

  country_renown_upkeep: "@renown! [concept_renown]"
  country_renown_subtract_desc:  "An increase or decrease in @renown! [concept_renown]"

  country_renown_gen_mult: "@renown! [concept_renown]"
  country_renown_gen_mult_desc:  "An increase or decrease in @renown! [concept_renown]"

  country_renown_cost_mult: "@renown! [concept_renown]"
  country_renown_cost_mult_desc:  "An increase or decrease in @renown! [concept_renown]"

  country_arcana_pos_add: "@magic! [concept_magic_reserves]"
  country_arcana_pos_add_desc:  "An increase or decrease in @magic! [concept_magic_reserves]"

  country_arcana_neg_add: "@magic! [concept_magic_reserves]"
  country_arcana_neg_add_desc:  "An increase or decrease in @magic! [concept_magic_reserves]"

  country_arcana_upkeep: "@magic! [concept_magic_reserves]"
  country_arcana_subtract_desc:  "An increase or decrease in @magic! [concept_magic_reserves]"

  country_arcana_gen_mult: "@magic! [concept_magic_reserves]"
  country_arcana_gen_mult_desc:  "An increase or decrease in @magic! [concept_magic_reserves]"

  country_arcana_cost_mult: "@magic! [concept_magic_reserves]"
  country_arcana_cost_mult_desc:  "An increase or decrease in @magic! [concept_magic_reserves]"


  state_veil_integrity_contribution: "@veilneg! [Concept('concept_veil_integrity', 'Veil')] Disruption"
  state_veil_integrity_contribution_desc: "A decrease in @veilneg! [concept_veil_integrity]"

  country_clergymen_pol_str_mult: "[concept_political_strength] of $clergymen$"
  country_clergymen_pol_str_mult_desc: "An increase or decrease in the [concept_political_strength] of $clergymen$"

  country_archmages_pol_str_mult: "[concept_political_strength] of $archmages$"
  country_archmages_pol_str_mult_desc: "An increase or decrease in the [concept_political_strength] of $archmages$"
  country_archmages_voting_power_add: "[concept_political_strength] from the [concept_votes] of $archmages$"

  country_wizards_pol_str_mult: "[concept_political_strength] of $wizards$"
  country_wizards_pol_str_mult_desc: "An increase or decrease in the [concept_political_strength] of $wizards$"

  state_wizards_investment_pool_contribution_add: "$wizards$ [concept_investment_pool] contribution""
  state_wizards_investment_pool_contribution_add_desc: "How much of their profits $wizards$ will invest"
  state_wizards_investment_pool_efficiency_mult: "$wizards$ [concept_investment_pool] contribution efficiency"
  state_wizards_investment_pool_efficiency_mult_desc: "An increase or decrease to how much the invested profits from $wizards$ will contribute to the [concept_investment_pool]"
  
  state_archmages_investment_pool_contribution_add: "$archmages$ [concept_investment_pool] contribution"
  state_archmages_investment_pool_contribution_add_desc: "How much of their profits $archmages$ will invest"
  state_archmages_investment_pool_efficiency_mult: "$archmages$ [concept_investment_pool] contribution efficiency"
  state_archmages_investment_pool_efficiency_mult_desc: "An increase or decrease to how much the invested profits from $archmages$ will contribute to the [concept_investment_pool]"

  state_adventurers_investment_pool_contribution_add: "$adventurers$ [concept_investment_pool] contribution"
  state_adventurers_investment_pool_contribution_add_desc: "How much of their profits $adventurers$ will invest"
  state_adventurers_investment_pool_efficiency_mult: "$adventurers$ [concept_investment_pool] contribution efficiency"
  state_adventurers_investment_pool_efficiency_mult_desc: "An increase or decrease to how much the invested profits from $adventurers$ will contribute to the [concept_investment_pool]"

  state_heroes_investment_pool_contribution_add: "$heroes$ [concept_investment_pool] contribution"
  state_heroes_investment_pool_contribution_add_desc: "How much of their profits $heroes$ will invest"
  state_heroes_investment_pool_efficiency_mult: "$heroes$ [concept_investment_pool] contribution efficiency"
  state_heroes_investment_pool_efficiency_mult_desc: "An increase or decrease to how much the invested profits from $heroes$ will contribute to the [concept_investment_pool]"

  state_farmers_investment_pool_contribution_add: "$farmers$ [concept_investment_pool] contribution""
  state_archmages_investment_pool_contribution_add_desc: "How much of their profits $farmers$ will invest"
  state_farmers_investment_pool_efficiency_mult_desc: "An increase or decrease to how much the invested profits from $farmers$ will contribute to the [concept_investment_pool]"

  state_wizards_standard_of_living_add: "[concept_sol] for $wizards$."
  state_wizards_standard_of_living_add_desc: "Extra [concept_sol] added on top of wealth"

  state_archmages_standard_of_living_add: "[concept_sol] for $archmages$."
  state_archmages_standard_of_living_add_desc: "Extra [concept_sol] added on top of wealth"

  state_artificers_standard_of_living_add: "[concept_sol] for $artificers$."
  state_artificers_standard_of_living_add_desc: "Extra [concept_sol] added on top of wealth"
 country_artificers_pol_str_mult: "[concept_political_strength] of $artificers$"
 country_artificers_pol_str_mult_desc: "An increase or decrease in the [concept_political_strength] of $artificers$"

  goods_output_trinkets_mult: "Building @trinkets! Trinkets output"
  goods_output_trinkets_mult_desc: "A bonus or penalty to the amount of @trinkets! Trinkets produced by buildings"

  POP_BUREAUCRATS_MAGES: "Owner has [GetLawType('law_court_mages').GetName]"

#Building Goods Modifiers

#Hi, Grappes here! If there's some modifiers that you believe are out of place here, I just threw the missing goods mults here while I was here. After all, they're next to the input/output block I reorganized for legibility. Feel free to relocate them!

  building_group_bg_magic_manufacturing_throughput_add: "Magic Industries [concept_throughput]"
  building_group_bg_magic_manufacturing_throughput_add_desc: "A bonus or penalty to both input and output of Magic Industries"

  building_gizmo_workshop_throughput_add: "Gizmo Workshop building [concept_throughput]"
  building_gizmo_workshop_throughput_add_desc: "A bonus or penalty to the [concept_throughput] of Gizmo Workshops"

  building_leviathan_outpost_throughput_add: "Leviathan Outpost building [concept_throughput]"
  building_leviathan_outpost_throughput_add: "A bonus or penalty to the [concept_throughput] of Leviathan Outposts"

  building_goods_output_mult: "Building Goods Output"
  building_goods_output_mult_desc: "A flat multiplier to the amount of goods produced by a building. Seperate from [concept_throughput] by adding a flat bonus or penalty to the amount of goods produced while retaining the same amount of input goods. Applies to all output goods and does not scale."

  state_building_soulwrought_assembly_plant_max_level_add: "Soulwrought Assembly Plants Max Level"
  state_building_soulwrought_assembly_plant_max_level_add_desc: "Increases maximum amount Soulwrought Assembly Plants per State"

  goods_output_grain_mult: "Building @grain! Grain output"
  goods_output_grain_mult_desc: "A bonus or penalty to the amount of @grain! Grain produced by buildings"

  goods_output_wood_mult: "Building @wood! Wood output"
  goods_output_wood_mult_desc: "A bonus or penalty to the amount of @wood! Wood produced by buildings"

  goods_input_fertilizer_mult: "Building @fertilizer! Fertilizer input"
  goods_input_fertilizer_mult_desc: "A bonus or penalty to the amount of @fertilizer! Fertilizer consumed by buildings"
  goods_output_fertilizer_mult: "Building @fertilizer! Fertilizer output"
  goods_output_fertilizer_mult_desc: "A bonus or penalty to the amount of @fertilizer! Fertilizer consumed by buildings"

  goods_output_meat_mult: "Building @meat! Meat output"
  goods_output_meat_mult_desc: "A bonus of penalty to the amount of @meat! Meat produced by buildings"

  goods_output_gold_mult: "Building @gold! Gold output"
  goods_output_gold_mult_desc: "A bonus of penalty to the amount of @gold! Gold produced by buildings"

  goods_output_coal_mult: "Building @coal! Coal output"
  goods_output_coal_mult_desc: "A bonus of penalty to the amount of @coal! Coal produced by buildings"

	goods_output_blubber_mult: "Building @blubber! Blubber output"
  goods_output_blubber_mult_desc: "A bonus of penalty to the amount of @blubber! Blubber is produced by buildings"

	goods_output_monster_essence_mult: "Building @monster_essence! Monster_Essence Output"
  goods_output_monster_essence_mult_desc: "A bonus or penalty to the amount of @monster_essence! Monster Essence is produced by buildings"
  
  goods_input_furniture_add: "@furniture! Furniture input"
  goods_input_furniture_add_desc: "The amount of @furniture! Furniture consumed by buildings"

  goods_input_gizmos_add: "@gizmos! Wishstone input"
  goods_input_gizmos_add_desc: "The amount of @gizmos! Gizmos consumed by buildings"
  goods_output_gizmos_add: "@gizmos! Gizmo output"
  goods_output_gizmos_add_desc: "The amount of @gizmos! Gizmos produced by buildings"

  goods_input_blubber_add: "@blubber! Blubber input"
  goods_input_blubber_add_desc: "The amount of @blubber! Blubber consumed by buildings"
  goods_output_blubber_add: "@blubber! Blubber output"
  goods_output_blubber_add_desc: "The amount of @blubber! Blubber produced by buildings"

  state_soulwrought_assembled_add: "[GetCulture('soulwrought').GetName] produced per month"
  state_soulwrought_assembled_add_desc: "The amount of [GetCulture('soulwrought').GetName] produced by buildings, released in batches of 10K"
  state_soulwrought_assembled_mult: "Building [GetCulture('soulwrought').GetName] Output"
  state_soulwrought_assembled_mult_desc: "A bonus or penalty to the amount of [GetCulture('soulwrought').GetName] produced by buildings"
  state_diggy_diggy_dwarf_add: "[GetCulture('starwoken').GetName] unpetrified per month"
  state_diggy_diggy_dwarf_add_desc: "The amount of [GetCulture('starwoken').GetName] unpetrified by buildings, released in batches of 5K"
  state_diggy_diggy_dwarf_mult: "Building [Concept('concept_pop', '$concept_pops$')] output"
  state_diggy_diggy_dwarf_mult_desc: "A bonus or penalty to the amount of [GetCulture('starwoken').GetName] unpetrified by buildings"

  goods_input_thaumacores_add: "@thaumacores! Thaumacores input"
  goods_input_thaumacores_add_desc: "The amount of @thaumacores! Thaumacores consumed by buildings"
  goods_output_thaumacores_add: "@thaumacores! Thaumacores output"
  goods_output_thaumacores_add_desc: "The amount of @thaumacores! Thaumacores produced by buildings"

  goods_input_monster_essence_add: "@monster_essence! Monster Essence input"
  goods_input_monster_essence_add_desc: "The amount of @monster_essence! Monster Essence consumed by buildings"  
  goods_output_monster_essence_add: "@monster_essence! Monster Essence output"
  goods_output_monster_essence_add_desc: "The amount of @monster_essence! Monster Essence produced by buildings" 

  goods_input_trinkets_add: "@trinkets! Trinkets input"
  goods_input_trinkets_add_desc: "The amount of @trinkets! Trinkets consumed by buildings"
  goods_output_trinkets_add: "@trinkets! Trinkets output"
  goods_output_trinkets_add_desc: "The amount of @trinkets! Trinkets produced by buildings"

  goods_input_relics_add: "@relics! Relics input"
  goods_input_relics_add_desc: "The amount of @relics! Relics consumed by buildings"
  goods_output_relics_add: "@relics! Relics input"
  goods_output_relics_add_desc: "The amount of @relics! Relics consumed by buildings"
  goods_output_relics_mult: "Building @relics! Relics output"
  goods_output_relics_mult_desc: "A bonus or penalty to the amount of @relics! output produced by buildings"

  goods_input_cloudsilver_add: "@cloudsilver! Cloudsilver input"
  goods_input_cloudsilver_add_desc: "The amount of @cloudsilver! Cloudsilver consumed by buildings"
  goods_output_cloudsilver_add: "@cloudsilver! Cloudsilver output"
  goods_output_cloudsilver_add_desc: "The amount of @cloudsilver! Cloudsilver produced by buildings"

  goods_input_wishstone_add: "@wishstone! Wishstone input"
  goods_input_wishstone_add_desc: "The amount of @wishstone! Wishstone consumed by buildings"
  goods_output_wishstone_add: "@wishstone! Wishstone output"
  goods_output_wishstone_add_desc: "The amount of @wishstone! Wishstone produced by buildings"
  goods_output_wishstone_mult: "Building @wishstone! Wishstone output"
  goods_output_wishstone_mult_desc: "A bonus or penalty to the amount of @wishstone! output produced by buildings"

  goods_output_potions_add: "@potions! Potions output"
  goods_output_potions_add_desc: "The amount of @potions! Potions produced by buildings"
  goods_input_potions_add: "@potions! Potions input"
  goods_input_potions_add_desc: "The amount of @potions! Potions consumed by buildings"

  goods_output_soulwrought_intangible_add: "@soulwrought_intangible! Dorman Soulwrought output"
  goods_output_soulwrought_intangible_add_desc: "The amount of @soulwrought_intangible! Dormant Soulwrought produced by buildings"

  goods_output_luxury_potions_add: "@luxury_potions! Luxury Potions output"
  goods_output_luxury_potions_add_desc: "The amount of @luxury_potions! Luxury Potions produced by buildings"

  goods_output_airships_add: "@clippers! Airships output" #change this to airships when new art
  goods_output_airships_add_desc: "The amount of @clippers! Airships produced by buildings"

  goods_output_nimbium_add: "@nimbium! Nimbium output"
  goods_output_nimbium_add_desc: "The amount of @nimbium! Nimbium produced by buildings"

  goods_output_coal_mult: "Building @coal! Coal output"
  goods_output_coal_mult_desc: "A bonus or penalty to the amount of @coal! output produced by buildings"

  goods_output_iron_mult: "Building @iron! Iron output"
  goods_output_iron_mult_desc: "A bonus or penalty to the amount of @iron! output produced by buildings"

  state_building_observatory_max_level_add: "$building_observatory$ Max Level"
  state_building_observatory_max_level_add_desc: "A bonus or penalty to the maximum level of $building_observatory$ buildings."
  state_building_airship_dock_max_level_add: "$building_airship_dock$ Max Level"
  state_building_airship_dock_max_level_add_desc: "A bonus or penalty to the maximum level of $building_airship_dock$ buildings."
  state_adventurers_mortality_mult: "[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $adventurers$"
  state_adventurers_mortality_mult_desc: "An increase or decrease in the [Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $adventurers$"
  state_archmages_mortality_mult: "[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $archmages$"
  state_archmages_mortality_mult_desc: "An increase or decrease in the [Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $archmages$"
  state_wizards_mortality_mult: "[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $wizards$"
  state_wizards_mortality_mult_desc: "An increase or decrease in the [Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] of $wizards$"
  building_adventurers_mortality_mult: "$state_adventurers_mortality_mult$"
  building_adventurers_mortality_mult_desc: "$state_adventurers_mortality_mult_desc$"
  building_archmages_mortality_mult: "$state_archmages_mortality_mult$"
  building_archmages_mortality_mult_desc: "$state_archmages_mortality_mult_desc$"
  building_employment_adventurers_add: "$adventurers$ Per Level"
  building_employment_adventurers_add_desc: "Modifies the amount of $adventurers$ a building can hire per level"
  building_employment_adventurers_mult: "$building_employment_adventurers_add$"
  building_employment_adventurers_mult_desc: "$building_employment_adventurers_add_desc$"
  building_employment_wizards_add: "$wizards$ Per Level"
  building_employment_wizards_add_desc: "Modifies the amount of $wizards$ a building can hire per level"
  building_employment_wizards_mult: "$building_employment_wizards_add$"
  building_employment_wizards_mult_desc: "$building_employment_wizards_add_desc$"
  building_employment_archmages_add: "$archmages$ Per Level"
  building_employment_archmages_add_desc: "Modifies the amount of $archmages$ a building can hire per level"
  building_employment_archmages_mult: "$building_employment_archmages_add$"
  building_employment_archmages_mult_desc: "$building_employment_archmages_add_desc$"
  building_employment_heroes_add: "$heroes$ Per Level"
  building_employment_heroes_add_desc: "Modifies the amount of $heroes$ a building can hire per level"
  building_employment_heroes_mult: "$building_employment_heroes_add$"
  building_employment_heroes_mult_desc: "$building_employment_heroes_add_desc$"
  building_employment_artificers_add: "$artificers$ Per Level"
  building_employment_artificers_add_desc: "Modifies the amount of $artificers$ a building can hire per level"
  building_employment_artificers_mult: "building_employment_artificers_mult"
  building_employment_artificers_mult_desc: "building_employment_artificers_mult_desc"
  goods_input_opium_add: "@chimesilt! Chimesilt input"
  goods_input_opium_add_desc: "The amount of @chimesilt! Chimesilt consumed by buildings"
  state_adventurer_coverage_add: "Adventurer Coverage"
  state_adventurer_coverage_add_desc: "A bonus or penalty to the [Concept('concept_state','$concept_state_possessive$')] [concept_adventurer_coverage]"
  state_adventurer_coverage_mult: "Adventurer Coverage"
  state_adventurer_coverage_mult_desc: "A bonus or penalty to the [Concept('concept_state','$concept_state_possessive$')] [concept_adventurer_coverage]"

  building_group_bg_technology_throughput_add: "$bg_technology$ [concept_throughput]"
  building_group_bg_technology_throughput_add_desc: "A bonus or penalty to both input and output of $bg_technology$"

  building_group_bg_military_throughput_add: "$bg_military$ [concept_throughput]"
  building_group_bg_military_throughput_add_desc: "A bonus or penalty to both input and output of $bg_military$"

  country_institution_magical_focus_max_investment_add: "Max $institution_magical_focus$ [concept_institution] Investment"
  country_institution_magical_focus_max_investment_add_desc: "A bonus or penalty to the maximum investment level of the $institution_magical_focus$ [concept_institution]"

  building_group_bg_rice_farms_leechgardens_throughput_add: "$bg_rice_farms_leechgardens$ [concept_throughput]"
  building_group_bg_rice_farms_leechgardens_throughput_add_desc: "A bonus or penalty to the input and output of $bg_rice_farms_leechgardens$"

  building_leviathan_outpost_throughput_add: "$building_leviathan_outpost$ [concept_throughput]"
  building_leviathan_outpost_throughput_add_desc: "A bonus or penalty to the input and output of $building_leviathan_outpost$"

  building_group_bg_wishstone_mining_throughput_add: "$building_wishstone_mine$ [concept_throughput]"
  building_group_bg_wishstone_mining_throughput_add_desc: "A bonus or penalty to the input and output of $building_wishstone_mine$"

  building_group_bg_hunting_throughput_add: "$building_hunting_lodge$ [concept_throughput]"
  building_group_bg_hunting_throughput_add_desc: "A bonus or penalty to the input and output of $building_hunting_lodge$"

 building_haunted_grounds_throughput_add: "$building_haunted_grounds$ [concept_throughput]"
 building_haunted_grounds_throughput_add_desc: "A bonus or penalty to the input and output of $building_haunted_grounds$"

  building_group_bg_public_infrastructure_throughput_add: "$bg_public_infrastructure$ [concept_throughput]"
  building_group_bg_public_infrastructure_throughput_add_desc: "A bonus or penalty to both input and output of $bg_public_infrastructure$"

  building_group_bg_airshipyards_throughput_add: "$bg_airshipyards$ [concept_throughput]"
  building_group_bg_airshipyards_throughput_add_desc: "A bonus or penalty to both input and output of $bg_airshipyards$"

  building_group_bg_trade_tax_mult: "Trade Center Tax Income"
  building_group_bg_trade_tax_mult_desc: "A bonus or penalty to tax income from Trade Centers"

  #Veil Integrity 

 #Static Modifiers
  thalorian_victor: "Thalorian Crusade Victor"
  thalorian_loser: "Thalorian Crusade Loser"
  lords_of_ravencliff: "The Lords of Ravencliff"
  fire_giant_slaves: "Fire Giant Slaves"
  might_of_giants: "Might of Giants"
  gpk_clergy_power: "Divine Purpose of the Aisjie"
  recently_performed_initiations: "Recently Performed Initiations"
  uneventful_tithe: "Uneventful Tithe"
  unsavory_tithe: "Unsavory Tithe"
  seditious_rumors: "Seditious Rumors"
  crackdown_on_rumormongers: "Crackdown on Rumormongers"
  ravencliff_high_tribunal: "High Tribunal of Ravencliff"
  margraves_fist: "Iron Fist"
  hotel_monopoly: "Hotel Monopoly"
  call_of_the_steppe: "Call of the Steppe"
  last_of_the_horselords: "Last of the Horselords"
  horselord_traditions: "Horselord Traditions"
  traditional_riding_values: "Traditional Rider Values"
  kids_moving_to_cities: "Kids Moving to Cities"
  riders_accepting_bribes: "Riders Accepting Bribes"
  riders_bribes_rebuffed: "Rider Bribes Rebuffed"
  stood_up_to_foreign_landowners: "Stood Up to Foreign Landowners"
  enshrined_rural_life: "Enshrined Rural Life"
  hanging_up_the_saddle: "Hanging Up The Saddle"
  brackenshire_investors_guild: "Brackenshire Investor's Guild"
  bad_investments: "Bad Investments"
  good_roi: "Good Returns"
  clamping_down_on_soulwrought_protests: "Clamping Down on Soulwrought Protests"
  supporting_soulwrought_demonstrations: "Supporting Soulwrought Demonstrations"
  soulwrought_legal_equality: "Soulwrought Legal Equality"
  ignored_expert_advice: "Ignored Expert Advice"
  loose_quarantine_enforcement: "Loose Quarantine Enforcement"
  tore_down_sickhouses: "Tore Down Sickhouses"
  modifier_active_dragonblight_outbreak: "Active Dragonblight Outbreak"
  dragonblight_port_controls: "Dragonblight Port Controls"
  dragonblight_forced_charity: "Forced Charity"
  defended_birthday_party: "Defended Birthday Party"
  reprimanded_birthday_party: "Reprimanded Birthday Party"
  arrested_for_birthday_party: "Arrested for Birthday Party"
  wealthy_abusing_disease_restrictions: "Wealthy Abusing Disease Restrictions"
  sailing_in_fear: "Sailing in Fear"
  blighted_yet_triumphant: "Blighted, yet Triumphant"
  handling_naval_logistics: "Handling Naval Logistics"
  forced_back_to_work: "Forced Back to Work"
  dragonborn_staying_home: "Dragonborn Staying Home"
  rebuilding_hospital_network: "Rebuilding Hospital Network"
  managing_hospital_reconstruction: "Managing Hospital Reconstruction"
  yes_in_your_backyard: "Yes, in Your Backyard"
  gave_into_sickhouse_protests: "Gave Into Sickhouse Protests"
  tolerated_conversion_cult_state: "Tolerated Conversion Cults"
  crushed_conversion_cult: "Crushed Conversion Cult"
  active_conversion_cult: "Active Conversion Cult"
  scorned_sick_friend: "Scorned Sick Friend"
  sent_warm_regards: "Sent Warm Regards"
  victims_of_dragonblight: "Victims of Dragonblight"
  tolerated_kobold_pogroms: "Tolerated Kobold Pogroms"
  stopped_kobold_pogroms: "Stopped Kobold Pogroms"
  dragon_collapse: "Administrative Collapse"
  dragonbloc_collapse: "Administrative Collapse"
  dragonblight_blues: "Dragonblight Blues"
  dragon_sickhouses: "Dragon Sickhouses"
  industrialists_sickhouses_ignored: "Industrialist Charity Ignored"
  charity_for_the_sick: "Charity for the Sick"

 #building throughput modifiers
  building_wishstone_mine_throughput_add: "$building_wishstone_mine$ [concept_throughput]"
  building_wishstone_mine_throughput_add_desc: "A bonus or penalty to the input and output of $building_wishstone_mine$"
  

 #Combat Units
  unit_combat_unit_type_cuirassiers_offense_mult: "$combat_unit_type_cuirassiers$ $unit_offense_mult$"
  unit_combat_unit_type_cuirassiers_offense_mult_desc: "$combat_unit_type_cuirassiers$ $unit_offense_mult$"
  unit_combat_unit_type_hussars_offense_mult: "$combat_unit_type_hussars$ $unit_offense_mult$"
  unit_combat_unit_type_hussars_offense_mult_desc: "$combat_unit_type_hussars$ $unit_offense_mult$"
  unit_combat_unit_type_dragoons_offense_mult: "$combat_unit_type_dragoons$ $unit_offense_mult$"
  unit_combat_unit_type_dragoons_offense_mult_desc: "$combat_unit_type_dragoons$ $unit_offense_mult$"
  unit_combat_unit_type_lancers_offense_mult: "$combat_unit_type_lancers$ $unit_offense_mult$"
  unit_combat_unit_type_lancers_offense_mult_desc: "$combat_unit_type_lancers$ $unit_offense_mult$"
  unit_combat_unit_type_cuirassiers_defense_mult: "$combat_unit_type_cuirassiers$ $unit_defense_mult$"
  unit_combat_unit_type_cuirassiers_defense_mult_desc: "$combat_unit_type_cuirassiers$ $unit_defense_mult$"
  unit_combat_unit_type_hussars_defense_mult: "$combat_unit_type_hussars$ $unit_defense_mult$"
  unit_combat_unit_type_hussars_defense_mult_desc: "$combat_unit_type_hussars$ $unit_defense_mult$"
  unit_combat_unit_type_dragoons_defense_mult: "$combat_unit_type_dragoons$ $unit_defense_mult$"
  unit_combat_unit_type_dragoons_defense_mult_desc: "$combat_unit_type_dragoons$ $unit_defense_mult$"
  unit_combat_unit_type_lancers_defense_mult: "$combat_unit_type_lancers$ $unit_defense_mult$"
  unit_combat_unit_type_lancers_defense_mult_desc: "$combat_unit_type_lancers$ $unit_defense_mult$"

  raid_cooldown: "Recent Raiding"

  lighthouse_survey: "Surveying Lonely Islands"
  lighthouse_built: "Lighting the Way"
  modifier_lighthouse_site: "Possible Lighthouse Site"
  zulth_modifier: "Upstart Warlord"
  union_of_the_sands_junior_partner: "Ruled by Consort"
  toldek_paseb: "The Toldek Paseb"
  abolished_toldek_paseb: "Abolished Toldek Paseb"
  upshana_restored: "Upshana Dhaalum Restored"
  upashna_dhaalum: "The Upashna Dhaalum"
  jihduk_paseb: "The Jihduk Paseb"
  abolished_jihduk_paseb: "Abolished Jihduk Paseb"
  accepting_soulwrought_homelands: "Accepting Soulwrought Homelands"
  rejecting_soulwrought_homelands: "Rejecting Soulwrought Homelands"
	beauty_in_bloom_modifier: "Beauty in Bloom"
  examining_dragon_carvings: "Examining Draconic Carvings"
  modifier_dragon_tomb_site: "Rumored Dragon Tomb"
  found_dragon_tombs: "Worshipping Gem Dragons"
  draconic_carvings_examined: "Ancient Texts Examined"
  coverage_deficit: "[concept_adventurer_coverage] Deficit"

  power_bloc_leader_can_add_wargoal_bool: "Allows free $concept_war_goal$ when supporting another [concept_power_bloc_member]"
  state_retainer_assigned: "Retainer in Region"
  recently_moved_retainer: "Recently Moved"
  industrialists_pie_intervention: "Disapprove of government meddling"
  industrialists_pies_restricted: "Disapprove of pastries being restricted"
  industrialists_pies_unrestricted: "Approve of pastries being unrestricted"
  rural_folk_pies_restricted: "Approve of pastries being restricted"
  rural_folk_pies_unrestricted: "Disapprove of pastries being unrestricted"
  baking_powder_regulations: "Pastry Quality Regulations"
  modifier_pastry_subsidy_cost: "Pastry Subsidies"
  hobgoblin_training_standards: "Hobgoblin Training Standards"