l_english:
  POP_ARCHMAGES: "$archmages$ [concept_profession]"
  MAGIC_TOOLTIP: "$MAGIC_BALANCE$[SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'MAGIC_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  MAGIC_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n[SelectLocalization( GreaterThan_CFixedPoint( AccessPlayer.MakeScope.ScriptValue('arcana'), '(CFixedPoint)0' ), 'MAGIC_EXCESS_EFFECT_HEADER', 'MAGIC_DEFICIT_EFFECT_HEADER')]Your total generation of [AccessPlayer.MakeScope.ScriptValue('arcana_generation')|=+D]@magic![Nbsp][concept_magic_reserves] is due to:\n [AccessPlayer.GetModifier.GetDescFor('country_arcana_pos_add')] [ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_gen_mult') )]\nYour total usage of [AccessPlayer.MakeScope.ScriptValue('total_arcana_usage')|=+D]@magic![Nbsp][concept_magic_reserves] is due to: $MAGIC_COST_VALUE$"
  MAGIC_BALANCE: "@magic! #bold [concept_magic_reserves]#!\nBalance: [AccessPlayer.MakeScope.ScriptValue('arcana')|=+D]"
  MAGIC_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n[SelectLocalization( GreaterThan_CFixedPoint( AccessPlayer.MakeScope.ScriptValue('arcana'), '(CFixedPoint)0' ), 'MAGIC_EXCESS_EFFECT_HEADER', 'MAGIC_DEFICIT_EFFECT_HEADER')]Your total generation of [AccessPlayer.MakeScope.ScriptValue('arcana_generation')|=+D]@magic![Nbsp][concept_magic_reserves] is due to:\n [AccessPlayer.GetModifier.GetDescFor('country_arcana_pos_add')] [ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_gen_mult') )]\nYour total usage of [AccessPlayer.MakeScope.ScriptValue('total_arcana_usage')|=+D]@magic![Nbsp][concept_magic_reserves] is due to: $MAGIC_COST_VALUE$"
  MAGIC_BALANCE: "@magic! #bold [concept_magic_reserves]#!\nBalance: [AccessPlayer.MakeScope.ScriptValue('arcana')|=+D]"
  MAGIC_EXCESS_EFFECT_HEADER: "Effects from #v [AccessPlayer.MakeScope.ScriptValue('normalized_arcana')|%0]#! @magic! [concept_magic_reserves] #g excess#! (generation is higher than usage):\n$MAGIC_SURPLUS_EFFECTS$\n\n"
  MAGIC_DEFICIT_EFFECT_HEADER: "Effects from #v [Multiply_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('normalized_arcana'),'(CFixedPoint)-1')|%0]#! @magic! [concept_magic_reserves] #n deficit#! (usage is higher than generation):\n$MAGIC_DEFICIT_EFFECTS$\n\n"
  MAGIC_BASE_VALUE_BONUS: "\n#g +100#! from Base Value"
  MAGIC_COST_VALUE: "\n [AccessPlayer.MakeScope.ScriptValue('arcana_upkeep')|=+D] from [concept_arcana_cards][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_neg_add') )][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_cost_mult') )]"
  MAGIC_COST_VALUE: "\n [AccessPlayer.MakeScope.ScriptValue('arcana_upkeep')|=+D] from [concept_arcana_cards][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_neg_add') )][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_arcana_cost_mult') )]"
  MAGIC_INSTITUTION_RESERVE_BONUS: "\n[AccessPlayer.MakeScope.ScriptValue('magic_institution_bonus')|=+D] from [GetInstitutionType('institution_magical_focus').GetName]"
  magical_focus_institution_tooltip: "test"
  MAGIC_SURPLUS_EFFECTS: "[Multiply_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('normalized_arcana'),'(CFixedPoint)10')|=+D%0] #yellow $country_tech_research_speed_mult$ #!"
  MAGIC_DEFICIT_EFFECTS: "[Multiply_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('normalized_arcana'),'(CFixedPoint)10')|=+D%0] #yellow $country_tech_research_speed_mult$ #!"

  RENOWN_TOOLTIP: "$RENOWN_BALANCE$[SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'RENOWN_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  RENOWN_BALANCE: "@renown! #bold [concept_renown]#!\nBalance: [AccessPlayer.MakeScope.ScriptValue('renown')|=+D]"
  RENOWN_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n$RENOWN_EXCESS_EFFECT_HEADER$Your total generation of [AccessPlayer.MakeScope.ScriptValue('renown_generation')|=+D] @renown![Nbsp][concept_renown] is due to:\n [AccessPlayer.GetModifier.GetDescFor('country_renown_pos_add')] [ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_renown_gen_mult') )]"
  RENOWN_BALANCE: "@renown! #bold [concept_renown]#!\nBalance: [AccessPlayer.MakeScope.ScriptValue('renown')|=+D]"
  RENOWN_EXCESS_EFFECT_HEADER: "Effects from #v [AccessPlayer.MakeScope.ScriptValue('renown')|=+D]#! @renown! [concept_renown]:\n$RENOWN_SURPLUS_EFFECTS$\n\n"
  RENOWN_BASE_VALUE_BONUS: "\n#g +100#! from Base Value"
  RENOWN_COST_VALUE: "\n [AccessPlayer.MakeScope.ScriptValue('renown_upkeep')|=+D] from [Concept('concept_retainer', '$concept_retainers$')][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_renown_neg_add') )][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_renown_cost_mult') )]"
  RENOWN_COST_VALUE: "\n [AccessPlayer.MakeScope.ScriptValue('renown_upkeep')|=+D] from [Concept('concept_retainer', '$concept_retainers$')][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_renown_neg_add') )][ConcatIfNeitherEmpty( '\n', AccessPlayer.GetModifier.GetDescFor('country_renown_cost_mult') )]"
  RENOWN_INSTITUTION_RESERVE_BONUS: "\n[AccessPlayer.MakeScope.ScriptValue('renown_institution_bonus')|=+D] from [GetInstitutionType('institution_renownal_focus').GetName]"
  renownal_focus_institution_tooltip: "test"
  RENOWN_SURPLUS_EFFECTS: "[AccessPlayer.MakeScope.ScriptValue('renown_prestige')|=+D] #yellow [concept_prestige] #!"

  CHARACTER_RETAINER_ROLE: "#v Retainer#!"
  CHARACTER_RETAINER_ROLE_TOOLTIP: "#header [Character.GetFullName]#! is a #v Retainer#!"
  CHARACTER_PANEL_SUBTITLE_OTHER: "[SelectLocalization(Character.MakeScope.Var('is_retainer').IsSet, Concept('concept_retainer', '$concept_retainer$'), SelectLocalization(Character.IsRuler, Concept('concept_ruler', Character.GetPrimaryRoleTitle), Character.GetPrimaryRoleName))] [SelectLocalization(Character.IsRuler, 'of','in')] [Character.GetCountry.GetName]"


  BUILDING_POP_CONSTRUCTION_TOOLTIP: "#bold #white Pop Production#!#!\nBuildings in this state are producing [Concept('concept_pop', '$concept_pops$')] in batches.\nOnce the progress bar is filled by outputs from local [Concept('concept_building', '$concept_buildings$')], a new batch will be released and the progress will be reset."

  HAS_NARRATIVE: "#bold Story Content#!\n[Country.GetCustom('has_journals_loc')]"
  HAS_FLAVORED_INTEREST_GROUPS: "#bold Interest Groups#!\n[Country.GetCustom('has_flavored_interest_groups_loc')]"
  HAS_MAJOR_FORMABLE: "#bold Major Formable#!\n[Country.GetCustom('has_major_formable_loc')]"
  CUSTOM_CONTENT: "Custom Content"
  ICON_CHECK: "@green_checkmark!"
  ICON_CROSS: "@red_cross!"

  surplus_arcana: "Balance"

  je_agricultural_development_goal_dummy: "Increase the amount of [concept_buy_orders] for $coffee$ within our market by 150%"

dlc_roe: "Realms of Exether"
dlc_roe_desc: "Total Overhaul mod set in the magical world of Exether"

 DAY_MONDAY: "Moonday"
 DAY_TUESDAY: "Towerday"
 DAY_WEDNESDAY: "Wineday"
 DAY_THURSDAY: "Thunderday"
 DAY_FRIDAY: "Fireday"
 DAY_SATURDAY: "Swordsday"
 DAY_SUNDAY: "Saintsday"

OH_DEER: "#italic 'Sup Doc, we have#! #bold [ErrorDeer.NumberOrErrors|v]#! #italic error(s)!#!"

 artificers_trade_unions_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] will be more likely to attract $artificers$"
 artificers_trade_unions_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] will attract fewer $artificers$"
 archmages_trade_unions_ig_shift_effect_tt: "$archmages$ will invest in mundane industry"
 archmages_trade_unions_ig_shift_effect_negative_tt: "$archmages$ will no longer invest in mundane industry"
 wizards_devout_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_devout',GetPlayer).GetNameWithCountryVariant] will attract $wizards$"
 wizards_devout_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_devout',GetPlayer).GetNameWithCountryVariant] will no longer attract $wizards$"
 wizards_rural_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_rural_folk',GetPlayer).GetNameWithCountryVariant] will attract $wizards$"
 wizards_rural_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_rural_folk',GetPlayer).GetNameWithCountryVariant] will no longer attract $wizards$"
 archmages_rural_ig_shift_effect_negative_tt: "$archmages$ will no longer invest in agriculture"
 archmages_rural_ig_shift_effect_tt: "$archmages$ will invest in agriculture"
 academics_mages_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_mages',GetPlayer).GetNameWithCountryVariant] will attract $academics$"
 academics_mages_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_mages',GetPlayer).GetNameWithCountryVariant] will no longer attract $academics$"

 decree_special_measures: "Special Measures"
 decree_special_measures_desc: "Some irregular situations require special measures to resolve"

 STATE_ADVENTURER_COVERAGE_CONDENSED: "[AddLocalizationIf(GreaterThan_CFixedPoint(State.MakeScope.ScriptValue('state_adventurer_coverage_demand'),State.MakeScope.ScriptValue('state_adventurer_coverage_value')), 'WARNING')]Using #tooltippable #tooltip:[State.GetTooltipTag],STATE_ADVENTURER_COVERAGE_DEMAND_TOOLTIP [State.MakeScope.ScriptValue('state_adventurer_coverage_demand')|0v]#!#! of #tooltippable #tooltip:[State.GetTooltipTag],STATE_ADVENTURER_COVERAGE_TOOLTIP [State.MakeScope.ScriptValue('state_adventurer_coverage_value')|0v]#!#! [AddLocalizationIf(GreaterThan_CFixedPoint(State.MakeScope.ScriptValue('state_adventurer_coverage_demand'),State.MakeScope.ScriptValue('state_adventurer_coverage_value')), 'STATE_ADVENTURER_COVERAGE_INSUFFICIENT')]"
 ADVENTURER_COVERAGE_USAGE: "#header [concept_tax_capacity] Usage#!\n[State.GetName] uses $USAGE|1v$ [concept_tax_capacity]\n$TOOLTIP_DELIMITER$\nOne point of [concept_tax_capacity] is required per $POPS_PER_CAPACITY|vK$ [Concept('concept_pop', '$concept_pops$')] and [State.GetName] has a total population of $TOTAL_POPS|vK$"
 STATE_ADVENTURER_COVERAGE: "[concept_adventurer_coverage]\n$STATE_ADVENTURER_COVERAGE_CONDENSED$"
 STATE_ADVENTURER_COVERAGE_DESC: "#header [concept_adventurer_coverage]#!\nThe $concept_adventurer_coverage$ balance in [State.GetName] is [State.MakeScope.ScriptValue('state_adventurer_coverage_balance')|1+=]\n$TOOLTIP_DELIMITER$\n$concept_adventurer_coverage$: #tooltippable #tooltip:[State.GetTooltipTag],STATE_ADVENTURER_COVERAGE_TOOLTIP [State.MakeScope.ScriptValue('state_adventurer_coverage_value')|1+]#!#!\n$concept_adventurer_coverage$ Usage: #tooltippable #tooltip:[State.GetTooltipTag],STATE_ADVENTURER_COVERAGE_USAGE_TOOLTIP [State.MakeScope.ScriptValue('state_adventurer_coverage_demand')|1-]#!#![SelectLocalization(GreaterThan_CFixedPoint(State.MakeScope.ScriptValue('state_adventurer_coverage_demand'), State.MakeScope.ScriptValue('state_adventurer_coverage_value')), 'STATE_ADVENTURER_COVERAGE_INSUFFICIENT_LONG', '')]"
STATE_ADVENTURER_COVERAGE_TOOLTIP: "#bold [concept_adventurer_coverage]#!\n[State.GetName] has an [concept_adventurer_coverage] of #g [State.MakeScope.ScriptValue('state_adventurer_coverage_value')] #!\n$TOOLTIP_DELIMITER$ $ADVENTURER_COVERAGE_BASE_VALUE_BONUS$ [State.GetModifier.GetDescFor('state_adventurer_coverage_add')][State.GetModifier.GetDescFor('state_adventurer_coverage_mult')]"
STATE_ADVENTURER_COVERAGE_DEMAND_TOOLTIP: "#bold [concept_adventurer_coverage]#!\n[State.GetName] has an [concept_adventurer_coverage] Usage of [State.MakeScope.ScriptValue('state_adventurer_coverage_demand')|0v] \n$TOOLTIP_DELIMITER$ $ADVENTURER_COVERAGE_DEMAND_BASE_VALUE$ [State.GetCustom('adventurer_coverage_demand_bonus_loc')] [State.GetCustom('adventurer_coverage_demand_urban_bonus_loc')]"
 ADVENTURER_COVERAGE_DEMAND_BASE_VALUE: "\n#r +[State.MakeScope.ScriptValue('state_adventurer_coverage_demand_arable_land')]#! from Unused Arable Land"
 ADVENTURER_COVERAGE_DEMAND_BASE_VALUE_BONUS: "\n#g -[State.MakeScope.ScriptValue('state_adventurer_coverage_demand_urban_center_reduction')]#! from Urban Center"
 STATE_ADVENTURER_COVERAGE_INSUFFICIENT: "\n #v -#![State.MakeScope.ScriptValue('state_adventurer_coverage_multiplier')|v] [Concept('concept_sol', '$sol_short$')]"
 STATE_ADVENTURER_COVERAGE_INSUFFICIENT_LONG: "\n\n@warning! Because usage is higher than capacity, the following effects are applied to the [concept_state]:\n#v -#![State.MakeScope.ScriptValue('state_adventurer_coverage_multiplier')|v] [concept_sol]"
 ADVENTURER_COVERAGE_BASE_VALUE_BONUS: "\n#g +50#! from Base Value"
 ADVENTURER_COVERAGE_BUILDING_BONUS: "\n#g +#![State.GetModifier.GetValueFor('state_adventurer_coverage_add')|D+] from Local Production"
 ADVENTURER_COVERAGE_POLLUTION: "\n#r +#![State.MakeScope.ScriptValue('state_adventurer_coverage_demand_pollution')|D-] from Pollution"



has_reserves_tt: "[SCOPE.GetRootScope.GetCountry.GetName] does not have [Scope.ScriptValue('arcana_cost')|0v] @magic! #bold [concept_magic_reserves]"
has_low_veil_damage_tt: "[SCOPE.GetRootScope.GetCountry.GetName] does not have more than [Scope.ScriptValue('dragon_threshold')|0v] @veilneg! [concept_veil_impact]\n"

VEIL_INTEGRITY_TITLE: "#bold #o Veil Integrity#!"
VEIL_INTEGRITY_STATUS: "[AddLocalizationIf(GreaterThan_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_STATUS_STRENGTHENED')][AddLocalizationIf(EqualTo_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_STATUS_BALANCED')][AddLocalizationIf(LessThan_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_STATUS_WEAKENED')]"
VEIL_INTEGRITY_STATUS_BALANCED: "#v Balanced#!"
VEIL_INTEGRITY_STATUS_WEAKENED: "#bold #u Weakened#!#!"
VEIL_INTEGRITY_STATUS_STRENGTHENED: "#bold #o Strengthened#!#!"



  VEIL_INTEGRITY_TOOLTIP: "$VEIL_INTEGRITY_BALANCE$[SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'VEIL_INTEGRITY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  VEIL_INTEGRITY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nOur Veil Impact:  [AccessPlayer.MakeScope.ScriptValue('country_veil_damage')|1-]\n$TOOLTIP_DELIMITER$\nTop Veil Damage (Past Month):\n1. [GetGlobalVariable('veil_damage_top_1').GetCountry.GetName] - [GetGlobalVariable('veil_damage_top_1_value').GetValue|-1]\n2. [GetGlobalVariable('veil_damage_top_2').GetCountry.GetName] - [GetGlobalVariable('veil_damage_top_2_value').GetValue|-1]\n3. [GetGlobalVariable('veil_damage_top_3').GetCountry.GetName] - [GetGlobalVariable('veil_damage_top_3_value').GetValue|-1]"
  VEIL_INTEGRITY_BALANCE: "@veil! #bold [concept_veil_integrity]#!\nCurrent integrity: $VEIL_INTEGRITY_STATUS$"

VEIL_INTEGRITY_VALUE_TEXT: "[AddLocalizationIf(GreaterThan_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_VALUE_GOLD')][AddLocalizationIf(EqualTo_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_VALUE')][AddLocalizationIf(LessThan_int32(FixedPointToInt(AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')), '(int32)50'), 'VEIL_INTEGRITY_VALUE_BLUE')]"
VEIL_INTEGRITY_VALUE: "#v [AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')|1]%#!"
VEIL_INTEGRITY_VALUE_GOLD: "#bold #o [AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')|1]%#!#!"
VEIL_INTEGRITY_VALUE_BLUE: "#bold #u [AccessPlayer.MakeScope.ScriptValue('veil_integrity_total')|1]%#!#!"

VEIL_DAMAGE_COUNTRY: "[AccessPlayer.MakeScope.ScriptValue('country_veil_damage')]"

STATE_VEIL_DAMAGE: "[Concept('concept_veil_integrity', 'Veil Impact')]\n  [State.MakeScope.ScriptValue('state_veil_damage')|1-] "
STATE_VEIL_DAMAGE_DESC: "#header [Concept('concept_veil_integrity', 'Veil Impact')]#!: [State.GetModifier.GetFormattedValueFor('state_veil_integrity_contribution')]\n$TOOLTIP_DELIMITER$\n[State.GetModifier.GetDescFor('state_veil_integrity_contribution')]\n\nA decrease to @veilneg! [concept_veil_integrity]"


ASTRAL_CALENDAR_YEAR: "Year of the $ASTRAL_CALENDAR_YEAR_SIGN$"

ASTRAL_CALENDAR_YEAR_SIGN: "[AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)0'), 'ASTRAL_CALENDAR_SIGN_0')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)1'), 'ASTRAL_CALENDAR_SIGN_1')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)2'), 'ASTRAL_CALENDAR_SIGN_2')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)3'), 'ASTRAL_CALENDAR_SIGN_3')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)4'), 'ASTRAL_CALENDAR_SIGN_4')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)5'), 'ASTRAL_CALENDAR_SIGN_5')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)6'), 'ASTRAL_CALENDAR_SIGN_6')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)7'), 'ASTRAL_CALENDAR_SIGN_7')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)8'), 'ASTRAL_CALENDAR_SIGN_8')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)9'), 'ASTRAL_CALENDAR_SIGN_9')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)10'), 'ASTRAL_CALENDAR_SIGN_10')][AddLocalizationIf(EqualTo_CFixedPoint(AccessPlayer.MakeScope.ScriptValue('current_star_sign_year'), '(CFixedPoint)11'), 'ASTRAL_CALENDAR_SIGN_11')]"

ASTRAL_CALENDAR_SIGN_0: "[concept_gryphon]"
ASTRAL_CALENDAR_SIGN_1: "[concept_justice]"
ASTRAL_CALENDAR_SIGN_2: "[concept_sphinx]"
ASTRAL_CALENDAR_SIGN_3: "[concept_golem]"
ASTRAL_CALENDAR_SIGN_4: "[concept_unicorn]"
ASTRAL_CALENDAR_SIGN_5: "[concept_fey]"
ASTRAL_CALENDAR_SIGN_6: "[concept_phoenix]"
ASTRAL_CALENDAR_SIGN_7: "[concept_djinn]"
ASTRAL_CALENDAR_SIGN_8: "[concept_siren]"
ASTRAL_CALENDAR_SIGN_9: "[concept_kraken]"
ASTRAL_CALENDAR_SIGN_10: "[concept_fiend]"
ASTRAL_CALENDAR_SIGN_11: "[concept_angel]"

concept_supply_node: "Supply Node"
concept_supply_nodes:0 "Supply Nodes"
concept_supply_node_desc: "An intersection or point along a air or naval [concept_shipping_lane] representing a part of the sky or ocean. $concept_shipping_lanes$ always take the route between two coastal or airship [Concept('concept_state','$concept_states$')] that pass through the fewest number of $concept_supply_nodes$. Each additional $concept_supply_node$ beyond the first adds #v [GetDefine('NEconomy','SHIPPING_LANE_CONVOY_COST_SCALING')|=-%0]#! to the [concept_convoy_cost]."

SEA_NODE_TOOLTIP_SKY: "Sky Node"
SEA_NODE_TOOLTIP_FIND: "#header [concept_sea_node] in [StrategicRegion.GetNameNoFormatting]#!\n$TOOLTIP_DELIMITER$\nThere are #v $NUM_CONVOYS$#! [concept_convoys] belonging to our [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] that pass through this node[ConcatIfNeitherEmpty('\n','$SEA_NODE_DAMAGE$')]\n\n$SUPPLY_NETWORK$[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"
SKY_NODE_TOOLTIP_FIND: "#header [concept_sky_node] in [StrategicRegion.GetNameNoFormatting]#!\n$TOOLTIP_DELIMITER$\nThere are #v $NUM_CONVOYS$#! [concept_convoys] belonging to our [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] that pass through this node[ConcatIfNeitherEmpty('\n','$SEA_NODE_DAMAGE$')]\n\n$SUPPLY_NETWORK$[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"

SEA_NODE_TOOLTIP_SEA_PART_1: "#header [concept_sea_node] in [StrategicRegion.GetNameNoFormatting]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"

SEA_NODE_TOOLTIP: "[SelectLocalization(GetScriptedGui('is_sky_region').IsValid( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('node_region', StrategicRegion.MakeScope).End), 'SEA_NODE_TOOLTIP_SKY', 'SEA_NODE_TOOLTIP_SEA_PART_1')]"

 #COMMAND_CONFIRMATION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE: "Deploy to Sea Node" Enable if trying to hide sea nodes
MDF_MOD_DLC_BUTTON_TOOLTIP: "#T [Dlc.GetName]#!\n[Dlc.GetDesc]\n\n#low;emphasis @information! This DLC has been added by a #blue;bold mod#!#!"

POWER_BLOC_COHESION_HERITAGE_INCOMPATIBILITY: "Members without shared Heritage"
POWER_BLOC_COHESION_HERITAGE_COMPATIBILITY: "Members with shared Heritage"
POWER_BLOC_COHESION_LEADER_POPULATION_FRACTION: "Leader population fraction"

REPUTATION_EFFECTS: "Effects:"
RETAINER_ASSIGNED_REGION: "Assigned to [Character.MakeScope.Var('assigned_region').GetStrategicRegion.GetName]"
RETAINER_UNASSIGN_TITLE: "Unassign Retainer"
RETAINER_UNASSIGN_TEXT: "Do you wish to unassign the [concept_retainer] from this [concept_strategic_region]?"
SITUATIONS: "Quests"
RETAINERS: "Retainers"
RETAINER_SLOTS: "[AccessPlayer.MakeScope.ScriptValue('renown_reputation')|v0] [Concept('concept_retainer', '$concept_retainers$')]"
EXPEDITIONS: "Grand Expeditions"
concept_quests: "Quests"
concept_retainers: "Retainers"
NO_SITUATIONS: "Currently no active [Concept('concept_quest', '$concept_quests$')]"
NO_SITUATIONS_OUTLINER: "None Active"
ON_RETAINER: "[Concept('concept_retainer', '$concept_retainers$')] on Standby"
RECRUIT_CHARACTER_RETAINER: "Recruit additional [concept_retainer]"
RECRUIT_CHARACTER_RETAINER_HEADER: "Recruit Retainer"
ASSIGN_CHARACTER_RETAINER_HEADER: "Assign Retainer"
FIRST_NAME: "#v [Character.GetFirstName]#"
RETAINER_COST: "#v Hiring Cost#!"
REPUTATION: "Reputation"
ASSIGN_CHARACTER_BUTTON: "Assign"
sol_short: "Living Standards"
ERROR_DEER_TOOLTIP: "#header You fucked up and made some errors. Fix them, or they will #red haunt you in your nightmares.#!#!\n#instruction Left-Click#! to open Error Log\n#instruction Right-Click#! to make it go away (until you upset it again)"

undermountain: "Undermountain"
undermountain_urban: "Undercity"
dreamweaver_jungle: "Dreamweaver Jungle"
diseased_forest: "Diseased Forest"