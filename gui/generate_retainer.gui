types generate_retainer_types
{
	type generate_retainer_type = default_popup
	{
		layer = top
		blockoverride "header_close_button_visibility" {
			visible = yes
		}

		blockoverride "scrollarea_content"
		{
			flowcontainer = {
				block "datamodel" {}
				resizeparent = yes
				direction = horizontal
				spacing = 5

				item = {
					container = {
						datacontext = "[Scope.GetCharacter]"
						datacontext = "[Scope.GetCharacter.GetCountry]"

						using = entry_bg_fancy
						
						flowcontainer = {
							direction = vertical
							vertical_divider_full = {}
							
							### INFO
							flowcontainer = {
								direction = vertical
								spacing = 4
								margin_bottom = 12
								margin_left = 2
								
								### NAME + ICONS
								widget = {
									parentanchor = hcenter
									size = { 340 35 }
									scissor = yes
									
									background = {
										using = default_header_bg
										using = frame_small_mask_top
									}
									
									textbox = {
										raw_text = "[Character.GetCountry.GetFlagTextIcon] #BOLD  [Character.GetFullNameNoFormatting]#!"
										size = { 100% 100% }
										elide = right
										align = nobaseline
										using = fontsize_large
										margin = { 10 0 }
										parentanchor = vcenter
									}
								}
								
								### PORTRAIT
								character_portrait_large_torso = {
									parentanchor = hcenter
									blockoverride "show_hat" {}
									blockoverride "portrait_icons" {}
									blockoverride "portrait_button" {}
									blockoverride "tooltip_button_visibility" {
										visible = no
									}
									blockoverride "portrait_size" {
										size = { 85% 85% }
									}
								}

								widget = {
									parentanchor = hcenter
									size = { 320 40 }

									# IG
									flowcontainer = {
										name = "tutorial_highlight_recruit_commander_interest_group"
										parentanchor = center|vcenter
										margin_right = 10
										#visible = "[Not(Character.IsHeir)]"
										datacontext = "[Character.AccessInterestGroup]"
										spacing = 5
										
										character_ig_icon = {
											size = { 30 30 }

											blockoverride "tooltip" {
												tooltipwidget = {
													FancyTooltip_IG = {}
												}
											}
										}
										
										textbox = {
											raw_text = "#bold [InterestGroup.GetNameNoIcon]#!"
											autoresize = yes
											
											tooltipwidget = {
												FancyTooltip_IG = {}
											}
											
											parentanchor = left|vcenter
											align = left|nobaseline
										}
									}
								}

								divider_clean = {
									parentanchor = hcenter
									size = { 310 1 }
								}
								
								# traits + ideology
								container = {
									parentanchor = hcenter
									minimumsize = { 320 110 }

									dynamicgridbox = {
										datamodel = "[Character.AccessTraits]"
										maxhorizontalslots = 3
										datamodel_wrap = 2
										flipdirection = yes
										parentanchor = hcenter
										position = { 0 5 }

										item = {
											flowcontainer = {
												margin_right = 5
												margin_bottom = 5											
												container = {
													name = "tutorial_highlight_recruit_commander_trait"
													minimumsize = { 150 45 }
													maximumsize = { 150 45 }
													using = tooltip_above
													background = {
														using = entry_bg_simple
													}
													tooltipwidget = {
														FancyTooltip_CharacterTrait = {}
													}

													flowcontainer = {
														parentanchor = vcenter
														margin_left = 5
														icon = {
															size = { 25 35 }
															parentanchor = vcenter
															texture = "[CharacterTrait.GetTexture]"
														}
														textbox = {
															text = "[CharacterTrait.GetNameNoFormatting]"
															margin_left = 5
															margin_right = 10
															maximumsize = { 125 35 }
															elide = right
															autoresize = yes
															parentanchor = vcenter
															align = left|nobaseline
															multiline = yes
															using = fontsize_small
														}
													}
												}	
											}
										}
									}
								}

								### RECRUIT BUTTON
								button = {
									name = "tutorial_highlight_recruit_retainer_recruit_button"
									parentanchor = hcenter
									using = default_button_action
									size = { 325 45 }
									text = "RECRUIT_CHARACTER_BUTTON"
									datacontext = "[GetScriptedGui('recruit_retainer')]"
									onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(AccessPlayer.MakeScope).AddScope('recruited_character', Character.MakeScope).End)]"
									enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(AccessPlayer.MakeScope).AddScope('recruited_character', Character.MakeScope).End)]"
									tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(AccessPlayer.MakeScope).AddScope('recruited_character', Character.MakeScope).End)]"
									block "sound" {
										using = commander_recruit_button_sound
									}
								}
							}
						}
					}
				}
				}
		}
	}
}
