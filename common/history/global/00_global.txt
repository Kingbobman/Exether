# This is executed last among all history
GLOBAL = {

	every_state = {
		if = {
			limit = {
				exether_is_inland = yes
			}
			set_variable = {
				name = exe_is_inland
			}
		}
	}


	# Arcane Civics
	every_country = {
		# trigger_event = {
        #     id = civic_setup.1
        # }

		set_variable = {
			name = arcana_alignment_dogmatic
			value = 0
		}

		set_variable = {
			name = arcana_alignment_iconoclast
			value = 0
		}

		set_variable = {
			name = arcana_alignment_heretical
			value = 0
		}

		if = {
			limit = {
				religion = {
					has_discrimination_trait = dragon_domain
				}
			}
			set_variable = {
				name = arcana_magic_opinion
				value = -60
			}
		}
		else = {
			set_variable = {
				name = arcana_magic_opinion
				value = 0
			}
		}

		

		if = {
			limit = {
				NOT = { has_variable = num_arcana }
			}
			set_variable = {
				name = num_arcana
				value = 0
			}
		}

		every_scope_state = {
			set_local_variable = {
				name  = coverage_state
				value = this
			}
            if = {
                limit = {
                    state_adventurer_coverage_balance < 0
                }
                add_modifier = {
                    name = coverage_deficit
                    multiplier = {
                        value = local_var:coverage_state.state_adventurer_coverage_multiplier 
                    }
                }
            }
        }
	}

	#Retainers 
	every_country = { 
		create_character = {
			template = retainer_template
		}
		create_character = {
			template = retainer_template
		}
		create_character = {
			template = retainer_template
		}
	}



	every_country = {
		limit = { NOT = { has_law = law_type:law_slavery_banned } }
		ig:ig_landowners = { add_ideology = ideology_pro_slavery }
	}

	# Jack the ripper, prevents the event from happening every game

	every_country = {
		if = {
			limit = {
				is_player = yes
			}
		}
		random_list = {
			1 = { set_variable = var_jack_ripper_possible }
			9 = {
				#Nothing Happens
			}
		}
	}

	# Racial Techs

	every_country = {
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = human_heritage
				}
			}
			add_technology_researched = human_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = dwarf_heritage
				}
			}
			add_technology_researched = dwarf_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = elf_heritage
				}
			}
			add_technology_researched = elf_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = gnome_heritage
				}
			}
			add_technology_researched = gnome_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = dragon_heritage
				}
			}
			add_technology_researched = dragon_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = planetouched_heritage
				}
			}
			add_technology_researched = planetouched_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = ogre_heritage
				}
			}
			add_technology_researched = ogre_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = goblin_heritage
				}
			}
			add_technology_researched = goblin_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = lizardfolk_heritage
				}
			}
			add_technology_researched = lizard_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = giant_heritage
				}
			}
			add_technology_researched = giant_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = mouse_heritage
				}
			}
			add_technology_researched = mouse_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = orc_heritage
				}
			}
			add_technology_researched = orc_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = halfling_heritage
				}
			}
			add_technology_researched = halfling_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = bird_heritage
				}
			}
			add_technology_researched = bird_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = mechanical_heritage
				}
			}
			add_technology_researched = mechanical_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = hippo_heritage
				}
			}
			add_technology_researched = hippo_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					AND = {
						has_discrimination_trait = monstrous_heritage
						NOT = { has_discrimination_trait = naga }
						NOT = { has_discrimination_trait = beast  }
						
					}
					
				}
			}
			add_technology_researched = monster_tech
		}
		if = {
			limit = {
				any_primary_culture = {
						has_discrimination_trait = beast
				}
			}
			add_technology_researched = awakened_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = naga
				}
			}
			add_technology_researched = naga_tech
		}
		if = {
			limit = {
				any_primary_culture = {
					has_discrimination_trait = namkhazen_heritage
				}
			}
			add_technology_researched = namkhazen_tech
		}
}
	# International List

	every_country = {
		limit = {
			religion = {
				OR = {
					has_discrimination_trait = marktarian_heritage
					has_discrimination_trait = uriks_pantheon
				}
				
			}
		}
		effect_concord_member = yes

	}

	every_country = {
		limit = {
			has_variable = concord_member
		}
		add_to_global_variable_list = {
			name = concord_members_list
			target = THIS
		}
	}

	every_country = {
		limit = {
			has_variable = concord_major_member
		}
		add_to_global_variable_list = {
			name = concord_major_members_list
			target = THIS
		}
	}

	every_country = {
		limit = {
			has_variable = concord_observer
		}
		add_to_global_variable_list = {
			name = concord_observers_list
			target = THIS
		}
	}
	every_country = {
		limit = {
			NOR = {
				has_variable = concord_observer
				has_variable = concord_member
			}
		}
		add_to_global_variable_list = {
			name = concord_nonmember_list
			target = THIS
		}
	}
	every_country = {
		limit = {
			has_variable = concord_headquarters_holder
		}
		add_to_global_variable_list = {
			name = concord_headquarters_holder
			target = THIS
		}
	}
	## Concord Variables
	random_country = {
		set_global_variable = {
			name = veil_damage_top_1
			value = 0
		}
		set_global_variable = {
			name = veil_damage_top_1_value
			value = 0
		}

		set_global_variable = {
			name = veil_damage_top_2
			value = 0
		}
		set_global_variable = {
			name = veil_damage_top_2_value
			value = 0
		}

		set_global_variable = {
			name = veil_damage_top_3
			value = 0
		}
		set_global_variable = {
			name = veil_damage_top_3_value
			value = 0
		}

		set_global_variable = {
			name = var_concord_memberlist
			value = 0
		}
	}
	every_country = {
		limit = {
			has_variable = concord_member
		}
		change_global_variable = {
			name = var_concord_memberlist
			add = 1
		}
	}

	#Declaration of Independence
	every_country = {
		limit = {
			is_subject = yes
		}
		set_variable = declaration_of_independence_ach_possible
	}

	#Event Variables
	
	set_global_variable = {
		name = number_of_mega_earthquakes
		value = 0
	}

	set_global_variable = {
		name = number_of_mega_floods
		value = 0
	}
	
	set_global_variable = {
		name = number_of_mega_eruptions
		value = 0
	}

	set_global_variable = {
		name = veil_integrity_var
		value = 0
	}

	#setup_arcana_active = yes
	#setup_arcana_unicorn = yes
	#setup_arcana_golem = yes
	#setup_arcana_phoenix = yes
	#setup_arcana_sphinx = yes
	#setup_arcana_fiend = yes
	#setup_arcana_justice = yes
	#setup_arcana_siren = yes
	#setup_arcana_surplus = yes
	

	every_country = {
		limit = {
			is_major_unifier_candidate = yes
		}
		effect_has_major_formable = yes

		if = {
			limit = {
				can_form_nation = GAV
			}
			effect_has_custom_journals = yes 
		}
	}

	every_country = {

		add_modifier = {
			name = surplus_arcana
		}

		set_variable = {
			name = veil_damage
			value = 0
		}

		set_variable = {
			name = player_rank
			value = 99
		}

		calculate_arcanas = yes

					### Variable Errors Fixing - HACK!  Fix these eventually
		
			fix_variable_error = {
				X = asked_concord_observer
			}

			fix_variable_error = {
				X = napoleon_iii_var
			}

			fix_variable_error = {
				X = veil_damage_top_1
			}
			fix_variable_error = {
				X = veil_damage_top_2
			}
			fix_variable_error = {
				X = veil_damage_top_3
			}

		}

		

		#Union of the Sands JE
		set_global_variable = {
			name = yavira_scope
			value = c:DRO
		}
		set_global_variable = {
			name = vozmead_scope
			value = c:VOZ
		}
		set_global_variable = {
			name = yavira_gdp
			value = c:DRO.gdp
		}
		set_global_variable = {
			name = vozmead_gdp
			value = c:VOZ.gdp
		}



}
